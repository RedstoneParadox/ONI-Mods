<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!--Write mod.yaml file-->
	<Target Name="GenerateModYaml" BeforeTargets="PrepareForRun" Condition="'$(DoNotBuildAsMod)' != 'true'">
		<ItemGroup>
			<ModLines Include="title: '$(ModName)'"/>
			<ModLines Include="description: '$(ModDescription)'"/>
			<ModLines Include="staticID: $(AssemblyName)"/>
			<!--<ModLines Include="steamID: $(SteamId)" Condition="'$(SteamId)' != ''"/>--> <!--Causes recoverable parse errors :/-->
		</ItemGroup>
		<WriteLinesToFile File="$(TargetDir)/mod.yaml" Overwrite="true" Lines="@(ModLines)"/>
    <ItemGroup>
      <FileWrites Include="$(TargetDir)/mod.yaml" Condition="Exists('$(TargetDir)/mod.yaml')"/>
    </ItemGroup>
	</Target>
	<!--Write mod_info.yaml file-->
	<Target Name="GenerateModInfoYaml" BeforeTargets="PrepareForRun" Condition="'$(DoNotBuildAsMod)' != 'true'">
		<ItemGroup>
			<ModInfoLines Include="minimumSupportedBuild: $(TargetGameVersion)"/>
			<ModInfoLines Include="version: $(Version)"/>
			<ModInfoLines Include="APIVersion: 2"/>
			<ModInfoLines Include="requiredDlcIds:" Condition="'$(RequiredDlcIds)' != ''"/>
			<ModInfoLines Include="$([System.String]::Copy('$(RequiredDlcIds)').Insert(0,' - ').Replace(',','%0a- '))" Condition="'$(RequiredDlcIds)' != ''"/>
			<ModInfoLines Include="forbiddenDlcIds:" Condition="'$(ForbiddenDlcIds)' != ''"/>
			<ModInfoLines Include="$([System.String]::Copy('$(ForbiddenDlcIds)').Insert(0,' - ').Replace(',','%0a- '))" Condition="'$(ForbiddenDlcIds)' != ''"/>
		</ItemGroup>
		<WriteLinesToFile File="$(TargetDir)/mod_info.yaml" Overwrite="true" Lines="@(ModInfoLines)"/>
    <ItemGroup>
      <FileWrites Include="$(TargetDir)/mod_info.yaml" Condition="Exists('$(TargetDir)/mod_info.yaml')"/>
    </ItemGroup>
	</Target>
	<!--Write LauncherMetadata.json file for Romen ModLauncher and SgtsModUpdater-->
	<Target Name="GenerateLauncherMetadata" BeforeTargets="PrepareForRun" Condition="'$(DoNotBuildAsMod)' != 'true'">
		<ItemGroup>
			<LauncherMetadataLines Include='{'/>
			<LauncherMetadataLines Include='"UpdateIndexName":"Mods by Sgt_Imalas",'/>
			<LauncherMetadataLines Include='"UpdateIndexURL":"https://github.com/Sgt-Imalas/Sgt_Imalas-Oni-Mods/releases/download/AllMods_Automated_Build_FullRelease/_ReleaseVersionInfoData.json",'/>
			<LauncherMetadataLines Include='"BugReportURL":"https://github.com/Sgt-Imalas/Sgt_Imalas-Oni-Mods/issues/new/choose",'/>
			<LauncherMetadataLines Include='"RepoURL":"https://github.com/Sgt-Imalas/Sgt_Imalas-Oni-Mods",'/>
			<LauncherMetadataLines Include='"Author":"$(Authors)"'/>			
			<LauncherMetadataLines Include='}'/>
		</ItemGroup>
		<WriteLinesToFile File="$(TargetDir)/LauncherMetadata.json" Overwrite="true" Lines="@(LauncherMetadataLines)"/>
    <ItemGroup>
      <FileWrites Include="$(TargetDir)/LauncherMetadata.json" Condition="Exists('$(TargetDir)/LauncherMetadata.json')"/>
    </ItemGroup>
	</Target>

	<!--Merges all dlls in the output folder into a single dll-->

	<PropertyGroup>
		<TargetFolder Condition="'$(GameLibsFolder)' != '../Lib'">$(ModFolder)\$(TargetName)_dev\</TargetFolder>
		<TargetFolder Condition="'$(GameLibsFolder)' == '../Lib'">../Builds\$(TargetName)</TargetFolder>
	</PropertyGroup>

	<!--Copies the mod dll, the two yaml files and everything inside the ModAssets folder to the target mod folder-->
	<Target Name="CopyModsToDevFolder" AfterTargets="ILRepack" Condition="'$(DoNotBuildAsMod)' != 'true'">

		<Message Text="Executing CopyDLLs task" Importance="High" />

		<ItemGroup>
			<ModAssets
				Include = ".\ModAssets\**\*.*"
				Exclude = ".\**\*.afphoto;.\**\*.mo;.\**\*.afphoto~lock~"
				/>
		</ItemGroup>

		<Copy
		  SourceFiles="
			$(TargetDir)$(TargetName).dll;
			$(TargetDir)$(TargetName).pdb;
			$(TargetDir)mod.yaml;
			$(TargetDir)mod_info.yaml;
			$(TargetDir)LauncherMetadata.json;			
		  "
		  
		  DestinationFolder="$(TargetFolder)"/>

		<Message Text="Copy ModAssets to $(TargetFolder)" Importance="High"></Message>

		<Copy SourceFiles="@(ModAssets)" DestinationFolder="$(TargetFolder)\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<Message Text="Copied build files" Importance="High" />

	</Target>

	<!--Create archive version-->
	<!--
	<Target Name="CopyModToArchive" AfterTargets="ILRepack" Condition="'$(AssemblyName)' != 'UtilLibs' and '$(AssemblyName)' != 'Util_TwitchIntegrationLib' and '$(GameLibsFolder)' != '../Lib'">

		<Message Text="Creating archive release.." Importance="High"/>

		<PropertyGroup>
			<CleanedModName>$(ModName.Replace('"','').Replace(";","").Replace(":","")</CleanedModName>
			<ArchiveTargetFolder>$(SolutionDir)Releases\$(CleanedModName)\$(CleanedModName)__$(Version)__$(MinimumSupportedBuild)\</ArchiveTargetFolder>
		</PropertyGroup>

		<ItemGroup>
			<ModAssets Include="$(TargetDir)\ModAssets\**\*.*" />
		</ItemGroup>

		<MakeDir Directories="$(ArchiveTargetFolder)"/>
		<Message Text="Archive Target: $(ArchiveTargetFolder)" Importance="High"></Message>


		<Copy
		  SourceFiles="
			$(TargetDir)$(TargetName).dll;
			$(TargetDir)mod.yaml;
			$(TargetDir)mod_info.yaml;"
		  
		  DestinationFolder="$(ArchiveTargetFolder)"/>

		<Message Text="Copy ModAssets to $(ArchiveTargetFolder)" Importance="High"></Message>

		<Copy SourceFiles="@(ModAssets)" DestinationFolder="$(ArchiveTargetFolder)\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<Message Text="Copied archive files" Importance="High" />

	</Target>-->

	<!--Create folder for publicized dlls if not existing-->
	<Target Name="PubliciseMKDIR"
		BeforeTargets="Publicise"
		Condition="'$(GameLibsFolder)' != '../Lib' and '$(IsMod)' == 'true'"
		>
		<MakeDir Directories="$(SolutionDir)\PublicisedAssembly"/>
	</Target>

	<!--Creates publicized dlls from the game dlls-->
	<ItemGroup>
		<PubliciseAssemblies       Include="Assembly-CSharp.dll;Assembly-CSharp-firstpass.dll;"/>
		<PubliciseAssembliesInputs Include="@(PubliciseAssemblies->'$(GameLibsFolder)/%(Filename)%(Extension)')"/>
	</ItemGroup>

	<ItemGroup>
		<GameRefAssemblies Include="
					    Assembly-CSharp.dll;
					    Assembly-CSharp-firstpass.dll;
					    0Harmony.dll;
					    FMODUnity.dll;
					    Newtonsoft.Json.dll;
					    UnityEngine.dll;
					    UnityEngine.CoreModule.dll;
					    UnityEngine.ImageConversionModule.dll;
					    UnityEngine.AssetBundleModule.dll;
					    UnityEngine.PhysicsModule.dll;
					    UnityEngine.Physics2DModule.dll;
					    UnityEngine.ParticleSystemModule.dll;
					    UnityEngine.InputLegacyModule.dll;
					    Unity.TextMeshPro.dll;
					    UnityEngine.TextRenderingModule.dll;
					    UnityEngine.UI.dll;
					    UnityEngine.UIModule.dll;
					    UnityEngine.UnityWebRequestModule.dll;
					    Ionic.Zip.dll;
					    Newtonsoft.Json.dll;
					    com.rlabrecque.steamworks.net.dll;
					    netstandard.dll
					    " />
		<RefAssemblies Include="../PublicisedAssembly/*.dll; @(GameRefAssemblies->'$(GameLibsFolder)\%(Identity)')" />
	</ItemGroup>
	<Target Name="GenerateRefAssemblies"
		Inputs="@(RefAssemblies)"
		Outputs="@(RefAssemblies->'../Lib/%(Filename)%(Extension)')"
		AfterTargets="Publicise"
		BeforeTargets="BeforeResolveReferences"
		Condition="'$(GameLibsFolder)' != '../Lib' and '$(RefasmerInstalled)' != '0' and '$(IsMod)' == 'true'">

		<!--Workaround for paths containing spaces, e.g. "Program Files (x86)"-->
		<!--For some reason, adding the quotes to GameLibsFolder does not work-->
		<ItemGroup>
			<RefAsmerArguments Include="@(RefAssemblies -> '&quot;%(FullPath)&quot;', ' ')" />
		</ItemGroup>

		
	</Target>
</Project>